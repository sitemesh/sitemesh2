plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0-rc-1'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'opensymphony'
version = '2.6.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    lexer
}

sourceSets.main.java.srcDirs += ['build/generated-sources/jflex']

javadoc {
    failOnError = false
    exclude '**/Lexer.java'
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    metaInf {
        from('src/etc/tld') {
            include '*.tld'
        }
    }
    from('src/main/java') {
        include '**/*.xml'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'

    testImplementation group: 'junit', name: 'junit', version:'4.5'

    lexer 'de.jflex:jflex:1.3.5'
}

compileJava.doFirst {
    ant.taskdef classname: 'JFlex.anttask.JFlexTask', name: 'jflex', classpath: configurations.lexer.asPath
    ant.jflex(file: 'src/main/java/com/opensymphony/module/sitemesh/html/tokenizer/lexer.flex', destdir: 'build/generated-sources/jflex')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'Sitemesh'
                description = 'SiteMesh is a web-page layout and decoration framework and web- application integration framework to aid in creating large sites consisting of many pages for which a consistent look/feel, navigation and layout scheme is required.'
                url = 'https://github.com/sitemesh/sitemesh2'
                licenses {
                    license {
                        name =  'The Apache Software License, Version 1.1'
                        url = 'https://raw.githubusercontent.com/sitemesh/sitemesh2/master/LICENSE.txt'
                        distribution =  'repo'
                    }
                }
                developers {
                    developer {
                        id = 'joewalnes'
                        name = 'Joe Walnes'
                        email = 'joe dot walnes at gmail'
                    }
                    developer {
                        id = 'codeconsole'
                        name = 'Scott Murphy'
                    }
                }
                organization {
                    name = 'OpenSymphony'
                }
                scm {
                    connection = 'scm:git:git://github.com/sitemesh/sitemesh2.git'
                    developerConnection = 'scm:git:git@github.com:sitemesh/sitemesh2.git'
                    url = 'https://github.com/sitemesh/sitemesh2/'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/sitemesh/sitemesh2/issues'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}